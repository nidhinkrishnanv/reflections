Q. How can you use the staging area to make sure you have one commit per logical change?

Always stage one logical change and commit when one logical change is done.
Before adding the changes for another logical change.

Q. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When we want to try few experimental features.
When the initial project is being customized for different client requirement.

Q. How do the diagrams help you visualize the branch structure?

Diagrams help in visualizing the sequenze of branches.
We can know at which commit the branches split.

Q. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The new branch will have the features and changes of both branches.
We combine muliple branches to one, so we represent it in the same way in diagram.

Q. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pros : 
1. Automatically takes code commited by someone else, which is not related to my work.
2. Takes simple changes which might be a hasle if we want to commit ourselfs.

Cons:
1. Manually merging gives more clarity about the program as whole.
2. Automatic merging might sometime give unintended results, if used all the time.
